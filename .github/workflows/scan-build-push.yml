name: CI/CD Workflow

on:
  push:
    branches:
      - main  # Change this to your default branch if needed
      - master
  pull_request:
    branches:
      - main  # Change this to your default branch if needed
      - master

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    env:
      #DOCKER_IMAGE: saishubham0209/pythonapp
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Scan using SonarQube
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=docker-react
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork

      # Optional: Print SonarQube Logs
      - name: Print SonarQube Logs
        run: |
          ls -al .scannerwork
          cat .scannerwork/report-task.txt || echo "report-task.txt not found"

      # Step 3: Build Docker image
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: react-app:latest

      # Step 4: Scan the image using Trivy
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image: react-app:latest
          severity: HIGH,CRITICAL
        continue-on-error: true  # Fail the job if vulnerabilities are found

      # Step 5: Login to AWS ECR
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}  # Your AWS Access Key
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}  # Your AWS Secret Key
          aws-region: us-east-1  # Replace with your AWS region

      # Step 6: Push Docker Image to AWS ECR
      - name: Push Docker Image to AWS ECR
        run: |
          docker push 730335655881.dkr.ecr.us-east-1.amazonaws.com/react-app:${{ github.sha }}
